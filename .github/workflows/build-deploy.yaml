name: Bygg og Deploy

on: push
env:
    IMAGE_TAG: ${{ github.sha }}
    IMAGE: ghcr.io/${{ github.repository }}/veilarbportefoljeflatefs
    PRINT_PAYLOAD: true

jobs:
    link-to-trello:
        runs-on: ubuntu-latest
        name: Trello update
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Get trello card id
              id: card
              uses: navikt/veilarbtrelloactions/get-card@v2.0
              with:
                  key: ${{ secrets.TRELLO_KEY }}
                  token: ${{ secrets.TRELLO_TOKEN }}
                  board: BcjrjQZk
            - name: Attach branch to card
              id: Attach
              uses: navikt/veilarbtrelloactions/create-attachment@v2.0
              if: ${{ steps.card.outputs.success }}
              with:
                  key: ${{ secrets.TRELLO_KEY }}
                  token: ${{ secrets.TRELLO_TOKEN }}
                  card-id: ${{ steps.card.outputs.card-id }}
                  attachment-type: branch
    build:
        name: Build Project
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: '16'
                  cache: 'npm'
            - run: npm ci
            - run: npm run build
            - run: npm run test
    build-project-and-docker-image:
        runs-on: ubuntu-latest
        name: Build project and publish Docker image
        if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: '16'
                  cache: 'npm'
            - run: npm ci
            - name: Build production artifact
              run: npm run build
            - name: Run tests
              run: npm run test
            - name: Login to Docker
              uses: docker/login-action@v1
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build and push Docker image
              uses: docker/build-push-action@v2
              with:
                  context: .
                  push: true
                  tags: ${{ env.IMAGE }}:${{ env.IMAGE_TAG }}
    update-gh-pages:
        name: Update GitHub pages
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master'
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Setup node
              uses: actions/setup-node@v3
              with:
                  node-version: '16'
                  cache: 'npm'
            - name: Install dependencies
              run: npm ci
            - name: Build mock application
              run: npm run build:mock
            - name: Legg til 404 fil
              run: cp ./.github/pages/404.html ./build/404.html
            - name: Update GitHub pages
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./build
    deploy-dev:
        name: Deploy q1 fss
        if: github.ref == 'refs/heads/dev'
        needs:
            - build-project-and-docker-image
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-fss
                  RESOURCE: .nais/nais-dev.yaml
                  VAR: version=${{ env.IMAGE_TAG }},namespace=pto
    deploy-prod:
        name: Deploy prod fss
        if: github.ref == 'refs/heads/master'
        needs:
            - build-project-and-docker-image
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: prod-fss
                  RESOURCE: .nais/nais-prod.yaml
                  VAR: version=${{ env.IMAGE_TAG }}
    release-dev:
        name: Create dev release
        needs:
            - deploy-dev
        runs-on: ubuntu-latest
        steps:
            - name: Create release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: release/dev@${{ env.IMAGE_TAG }}
                  release_name: Release to dev
                  prerelease: true
    release-prod:
        name: Create prod release
        needs: deploy-prod
        runs-on: ubuntu-latest
        steps:
            - name: Create release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: release/prod@${{ env.IMAGE_TAG }}
                  release_name: Release to prod
                  prerelease: false
